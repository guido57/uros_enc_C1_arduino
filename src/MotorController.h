#include <Arduino.h>
#include <std_msgs/msg/int32.h>
#include "ros2.h"

//creating a class for motor control
class MotorController {
public:
  int8_t Forward;
  int8_t Backward;
  //int8_t Enable;
  //int8_t EncoderPinA;
  //int8_t EncoderPinB;
  //std_msgs__msg__Int32 EncoderCount;
  int CurrentPosition;
  int PreviousPosition;
  unsigned long CurrentTime;
  unsigned long PreviousTime;
  unsigned long CurrentTimeforError;
  unsigned PreviousTimeForError;
  float rpmFilt;
  float eintegral;
  float ederivative;
  float rpmPrev;
  float kp;
  float ki;
  float kd;
  float error;
  float previousError = 0;
  int tick;

  MotorController(int8_t ForwardPin, int8_t BackwardPin , /* int8_t EnablePin, int8_t EncoderA, int8_t EncoderB, */ int tickPerRevolution);
  
  //initializing the parameters of PID controller
  void initPID(float proportionalGain, float integralGain, float derivativeGain);
  
  //function return rpm of the motor using the encoder tick values
  float getRpm(int encoder_count_total);
    
  //pid controller
  float pid(float setpoint, float feedback) ;
  //move the robot wheels based the control signal generated by the pid controller
  void moveBase(float ActuatingSignal, int threshold, int pwmChannel0, int pwmChannel1 ) ;
  void stop(int pwmChannel0, int pwmChannel1) ;

};
